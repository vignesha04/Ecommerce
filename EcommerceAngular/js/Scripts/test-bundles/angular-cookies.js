!function(e,t){"use strict";function r(e,r,a){function n(e,a,n){var o,l;n=n||{},l=n.expires,o=t.isDefined(n.path)?n.path:i,t.isUndefined(a)&&(l="Thu, 01 Jan 1970 00:00:00 GMT",a=""),t.isString(l)&&(l=new Date(l));var s=encodeURIComponent(e)+"="+encodeURIComponent(a);s+=o?";path="+o:"",s+=n.domain?";domain="+n.domain:"",s+=l?";expires="+l.toUTCString():"",s+=n.secure?";secure":"",s+=n.samesite?";samesite="+n.samesite:"";var d=s.length+1;return d>4096&&r.warn("Cookie '"+e+"' possibly not set or overflowed because it was too large ("+d+" > 4096 bytes)!"),s}var i=a.baseHref(),o=e[0];return function(e,t,r){o.cookie=n(e,t,r)}}t.module("ngCookies",["ng"]).info({angularVersion:"1.7.8"}).provider("$cookies",[function(){function e(e){return e?t.extend({},r,e):r}var r=this.defaults={};this.$get=["$$cookieReader","$$cookieWriter",function(r,a){return{get:function(e){return r()[e]},getObject:function(e){var r=this.get(e);return r?t.fromJson(r):r},getAll:function(){return r()},put:function(t,r,n){a(t,r,e(n))},putObject:function(e,r,a){this.put(e,t.toJson(r),a)},remove:function(t,r){a(t,void 0,e(r))}}}]}]),r.$inject=["$document","$log","$browser"],t.module("ngCookies").provider("$$cookieWriter",function(){this.$get=r}),describe("$cookies",function(){var e;beforeEach(function(){e={},module("ngCookies",{$$cookieWriter:jasmine.createSpy("$$cookieWriter").and.callFake(function(t,r){e[t]=r}),$$cookieReader:function(){return e}})}),it("should serialize objects to json",inject(function(e){e.putObject("objectCookie",{id:123,name:"blah"}),expect(e.get("objectCookie")).toEqual('{"id":123,"name":"blah"}')})),it("should deserialize json to object",inject(function(e){e.put("objectCookie",'{"id":123,"name":"blah"}'),expect(e.getObject("objectCookie")).toEqual({id:123,name:"blah"})})),it("should delete objects from the store when remove is called",inject(function(e){e.putObject("gonner",{"I'll":"Be Back"}),expect(e.get("gonner")).toEqual('{"I\'ll":"Be Back"}'),e.remove("gonner"),expect(e.get("gonner")).toEqual(void 0)})),it("should handle empty string value cookies",inject(function(t){t.putObject("emptyCookie",""),expect(t.get("emptyCookie")).toEqual('""'),expect(t.getObject("emptyCookie")).toEqual(""),e.blankCookie="",expect(t.getObject("blankCookie")).toEqual("")})),it("should put cookie value without serializing",inject(function(e){e.put("name","value"),e.put("name2",'"value2"'),expect(e.get("name")).toEqual("value"),expect(e.getObject("name2")).toEqual("value2")})),it("should get cookie value without deserializing",inject(function(e){e.put("name","value"),e.putObject("name2","value2"),expect(e.get("name")).toEqual("value"),expect(e.get("name2")).toEqual('"value2"')})),it("should get all the cookies",inject(function(e){e.put("name","value"),e.putObject("name2","value2"),expect(e.getAll()).toEqual({name:"value",name2:'"value2"'})})),it("should pass options on put",inject(function(e,t){e.put("name","value",{path:"/a/b"}),expect(t).toHaveBeenCalledWith("name","value",{path:"/a/b"})})),it("should pass options on putObject",inject(function(e,t){e.putObject("name","value",{path:"/a/b"}),expect(t).toHaveBeenCalledWith("name",'"value"',{path:"/a/b"})})),it("should pass options on remove",inject(function(e,t){e.remove("name",{path:"/a/b"}),expect(t).toHaveBeenCalledWith("name",void 0,{path:"/a/b"})})),it("should pass default options on put",function(){module(function(e){e.defaults.secure=!0}),inject(function(e,t){e.put("name","value",{path:"/a/b"}),expect(t).toHaveBeenCalledWith("name","value",{path:"/a/b",secure:!0})})}),it("should pass default options on putObject",function(){module(function(e){e.defaults.secure=!0}),inject(function(e,t){e.putObject("name","value",{path:"/a/b"}),expect(t).toHaveBeenCalledWith("name",'"value"',{path:"/a/b",secure:!0})})}),it("should pass default options on remove",function(){module(function(e){e.defaults.secure=!0}),inject(function(e,t){e.remove("name",{path:"/a/b"}),expect(t).toHaveBeenCalledWith("name",void 0,{path:"/a/b",secure:!0})})}),it("should let passed options override default options",function(){module(function(e){e.defaults.secure=!0}),inject(function(e,t){e.put("name","value",{secure:!1}),expect(t).toHaveBeenCalledWith("name","value",{secure:!1})})}),it("should pass default options if no options are passed",function(){module(function(e){e.defaults.secure=!0}),inject(function(e,t){e.put("name","value"),expect(t).toHaveBeenCalledWith("name","value",{secure:!0})})})}),describe("$$cookieWriter",function(){function t(){for(var t=a.cookie.split(";"),r=e.location.pathname,n=0;n<t.length;n++)for(var i=t[n],o=i.indexOf("="),l=o>-1?i.substr(0,o):i,s=r.split("/");s.length;)a.cookie=l+"=;path="+(s.join("/")||"/")+";expires=Thu, 01 Jan 1970 00:00:00 GMT",s.pop()}var r,a;beforeEach(function(){a=e.document,t(),expect(a.cookie).toEqual(""),module("ngCookies"),inject(function(e){r=e})}),afterEach(function(){t(),expect(a.cookie).toEqual("")}),describe("remove via $$cookieWriter(cookieName, undefined)",function(){it("should remove a cookie when it is present",function(){a.cookie="foo=bar;path=/",r("foo",void 0),expect(a.cookie).toEqual("")}),it("should do nothing when an nonexisting cookie is being removed",function(){r("doesntexist",void 0),expect(a.cookie).toEqual("")})}),describe("put via $$cookieWriter(cookieName, string)",function(){it("should create and store a cookie",function(){r("cookieName","cookie=Value"),expect(a.cookie).toMatch(/cookieName=cookie%3DValue;? ?/)}),it("should overwrite an existing unsynced cookie",function(){a.cookie="cookie=new;path=/";var e=r("cookie","newer");expect(a.cookie).toEqual("cookie=newer"),expect(e).not.toBeDefined()}),it("should encode both name and value",function(){r("cookie1=","val;ue"),r("cookie2=bar;baz","val=ue");var e=a.cookie.split("; ");expect(e.length).toEqual(2),expect(e).toContain("cookie1%3D=val%3Bue"),expect(e).toContain("cookie2%3Dbar%3Bbaz=val%3Due")}),it("should log warnings when 4kb per cookie storage limit is reached",inject(function(e){var t,n,i="";for(t=0;4083>t;t++)i+="x";n=a.cookie,r("x",i),expect(a.cookie).not.toEqual(n),expect(a.cookie).toEqual("x="+i),expect(e.warn.logs).toEqual([]),r("x",i+"xxxx"),expect(e.warn.logs).toEqual([["Cookie 'x' possibly not set or overflowed because it was too large (4097 > 4096 bytes)!"]]),r("x","shortVal"),expect(a.cookie).toEqual("x=shortVal"),n=a.cookie,r("x",i+i+i),a.cookie!==n&&this.fail(new Error("browser didn't drop long cookie when it was expected. make the cookie in this test longer")),expect(a.cookie).toEqual("x=shortVal"),e.reset()}))}),describe("put via $$cookieWriter(cookieName, string), if no <base href> ",function(){beforeEach(inject(function(e){e.$$baseHref=void 0})),it('should default path in cookie to "" (empty string)',function(){r("cookie","bender"),expect(a.cookie).toEqual("cookie=bender")})})}),describe("cookie options",function(){function e(e){return r[0].cookie.split(";").reduce(function(t,r){var a=r.split("=",2);if(a[0]===e){if(n(t))return n(a[1])?!0:a[1];throw new Error("duplicate key in cookie string")}return t},void 0)}var r,a,n=t.isUndefined;beforeEach(function(){r=[{cookie:""}],module("ngCookies",{$document:r}),inject(function(e){e.$$baseHref="/a/b"}),inject(function(e){a=e})}),it("should use baseHref as default path",function(){a("name","value"),expect(e("path")).toBe("/a/b")}),it("should accept path option",function(){a("name","value",{path:"/c/d"}),expect(e("path")).toBe("/c/d")}),it("should accept domain option",function(){a("name","value",{domain:".example.com"}),expect(e("domain")).toBe(".example.com")}),it("should accept secure option",function(){a("name","value",{secure:!0}),expect(e("secure")).toBe(!0)}),it("should accept samesite option when value is lax",function(){a("name","value",{samesite:"lax"}),expect(e("samesite")).toBe("lax")}),it("should accept samesite option when value is strict",function(){a("name","value",{samesite:"strict"}),expect(e("samesite")).toBe("strict")}),it("should accept expires option on set",function(){a("name","value",{expires:"Fri, 19 Dec 2014 00:00:00 GMT"}),expect(e("expires")).toMatch(/^Fri, 19 Dec 2014 00:00:00 (UTC|GMT)$/)}),it("should always use epoch time as expire time on remove",function(){a("name",void 0,{expires:"Fri, 19 Dec 2014 00:00:00 GMT"}),expect(e("expires")).toMatch(/^Thu, 0?1 Jan 1970 00:00:00 (UTC|GMT)$/)}),it("should accept date object as expires option",function(){a("name","value",{expires:new Date(Date.UTC(1981,11,27))}),expect(e("expires")).toMatch(/^Sun, 27 Dec 1981 00:00:00 (UTC|GMT)$/)})})}(window,window.angular);